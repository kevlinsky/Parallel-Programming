#include<mpi.h>
#include<iostream>

int main(int argc, char *argv[]) {
    int ProcNum, ProcRank;

    const int NUM = 10;
    int a[NUM];

    MPI_Status Status;

    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);
    MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);

    if (ProcRank == 0) {
        for (int i = 0; i < NUM; i++) {
            a[i] = rand() % 100 + 1;
        }
        MPI_Send(&a, NUM, MPI_INT, 1, 0, MPI_COMM_WORLD);
    } else if (ProcRank == 1) {
        MPI_Recv(&a, NUM, MPI_INT, 0, MPI_ANY_TAG, MPI_COMM_WORLD, &Status);
        printf("Received\na[10] = ");
        for (int i = 0; i < NUM; i++) {
            printf("%d ", a[i]);
        }
        printf("\n");
    }
    MPI_Finalize();

    return 0;
}